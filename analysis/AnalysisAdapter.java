/* This file was generated by SableCC (http://www.sablecc.org/). */

package analysis;

import java.util.*;
import node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    @Override
    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    @Override
    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    @Override
    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    @Override
    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    @Override
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAStart(AStart node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWithDecBody(AWithDecBody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWithoutDecBody(AWithoutDecBody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWithoutInstructionsBody(AWithoutInstructionsBody node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOpsInstructions(AOpsInstructions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultInstructionsInstructions(AMultInstructionsInstructions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANestedInstructions(ANestedInstructions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAInstructions(AInstructions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfOperation(AIfOperation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWhileOperation(AWhileOperation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAssignOperation(AAssignOperation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrintOperation(APrintOperation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOperation(AOperation node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPrint(APrint node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAssignment(AAssignment node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASingleDeclarations(ASingleDeclarations node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultiDeclarations(AMultiDeclarations node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABooleanType(ABooleanType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIntegerType(AIntegerType node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolcompExpr(ABoolcompExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArithexprExpr(AArithexprExpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAPlusArithexpr(APlusArithexpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMinusArithexpr(AMinusArithexpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAArithexpr(AArithexpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAModFactor(AModFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMultFactor(AMultFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseADivFactor(ADivFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFactor(AFactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANumberTerm(ANumberTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIdentifierTerm(AIdentifierTerm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAGtComparision(AGtComparision node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAGeComparision(AGeComparision node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALtComparision(ALtComparision node)
    {
        defaultCase(node);
    }

    @Override
    public void caseALeComparision(ALeComparision node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANeComparision(ANeComparision node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEqComparision(AEqComparision node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFirstWhileinstructions(AFirstWhileinstructions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAWhileinstructions(AWhileinstructions node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAEqBoolcomp(AEqBoolcomp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANeBoolcomp(ANeBoolcomp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAComparisionBoolcomp(AComparisionBoolcomp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolcomp(ABoolcomp node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOrBoolexpr(AOrBoolexpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAXorBoolexpr(AXorBoolexpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolexpr(ABoolexpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAAndBoolterm(AAndBoolterm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolterm(ABoolterm node)
    {
        defaultCase(node);
    }

    @Override
    public void caseANotBoolfactor(ANotBoolfactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseATrueBoolfactor(ATrueBoolfactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFalseBoolfactor(AFalseBoolfactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseABoolfactor(ABoolfactor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAMatchedIfexpr(AMatchedIfexpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOpenstmtIfexpr(AOpenstmtIfexpr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFmatchedStmt(AFmatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfthenIfUnmatchedStmt(AIfthenIfUnmatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfthenUnmatchedStmt(AIfthenUnmatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAIfthenelseUnmatchedStmt(AIfthenelseUnmatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAFmatchedStmtSmatchedStmt(AFmatchedStmtSmatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseASmatchedStmt(ASmatchedStmt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseAOther(AOther node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTInteger(TInteger node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBoolean(TBoolean node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTVar(TVar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNumber(TNumber node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAssign(TAssign node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBegin(TBegin node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProgramend(TProgramend node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEnd(TEnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTProgram(TProgram node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTThen(TThen node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDo(TDo node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWriteln(TWriteln node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBreak(TBreak node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTLe(TLe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTGe(TGe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNe(TNe node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTAnd(TAnd node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTOr(TOr node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTXor(TXor node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTNot(TNot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTTrue(TTrue node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTFalse(TFalse node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTSemikolon(TSemikolon node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTWhitespace(TWhitespace node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseTBoolidentifier(TBoolidentifier node)
    {
        defaultCase(node);
    }

    @Override
    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
