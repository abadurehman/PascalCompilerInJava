/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AMatchedstmt extends PMatchedstmt
{
    private PWhileinstructions _whileinstructions_;

    public AMatchedstmt()
    {
        // Constructor
    }

    public AMatchedstmt(
        @SuppressWarnings("hiding") PWhileinstructions _whileinstructions_)
    {
        // Constructor
        setWhileinstructions(_whileinstructions_);

    }

    @Override
    public Object clone()
    {
        return new AMatchedstmt(
            cloneNode(this._whileinstructions_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMatchedstmt(this);
    }

    public PWhileinstructions getWhileinstructions()
    {
        return this._whileinstructions_;
    }

    public void setWhileinstructions(PWhileinstructions node)
    {
        if(this._whileinstructions_ != null)
        {
            this._whileinstructions_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._whileinstructions_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._whileinstructions_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._whileinstructions_ == child)
        {
            this._whileinstructions_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._whileinstructions_ == oldChild)
        {
            setWhileinstructions((PWhileinstructions) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
