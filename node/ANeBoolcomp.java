/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class ANeBoolcomp extends PBoolcomp
{
    private PBoolcomp _boolcomp_;
    private TNe _ne_;
    private PBoolexpr _boolexpr_;

    public ANeBoolcomp()
    {
        // Constructor
    }

    public ANeBoolcomp(
        @SuppressWarnings("hiding") PBoolcomp _boolcomp_,
        @SuppressWarnings("hiding") TNe _ne_,
        @SuppressWarnings("hiding") PBoolexpr _boolexpr_)
    {
        // Constructor
        setBoolcomp(_boolcomp_);

        setNe(_ne_);

        setBoolexpr(_boolexpr_);

    }

    @Override
    public Object clone()
    {
        return new ANeBoolcomp(
            cloneNode(this._boolcomp_),
            cloneNode(this._ne_),
            cloneNode(this._boolexpr_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANeBoolcomp(this);
    }

    public PBoolcomp getBoolcomp()
    {
        return this._boolcomp_;
    }

    public void setBoolcomp(PBoolcomp node)
    {
        if(this._boolcomp_ != null)
        {
            this._boolcomp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._boolcomp_ = node;
    }

    public TNe getNe()
    {
        return this._ne_;
    }

    public void setNe(TNe node)
    {
        if(this._ne_ != null)
        {
            this._ne_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._ne_ = node;
    }

    public PBoolexpr getBoolexpr()
    {
        return this._boolexpr_;
    }

    public void setBoolexpr(PBoolexpr node)
    {
        if(this._boolexpr_ != null)
        {
            this._boolexpr_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._boolexpr_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._boolcomp_)
            + toString(this._ne_)
            + toString(this._boolexpr_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._boolcomp_ == child)
        {
            this._boolcomp_ = null;
            return;
        }

        if(this._ne_ == child)
        {
            this._ne_ = null;
            return;
        }

        if(this._boolexpr_ == child)
        {
            this._boolexpr_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._boolcomp_ == oldChild)
        {
            setBoolcomp((PBoolcomp) newChild);
            return;
        }

        if(this._ne_ == oldChild)
        {
            setNe((TNe) newChild);
            return;
        }

        if(this._boolexpr_ == oldChild)
        {
            setBoolexpr((PBoolexpr) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
