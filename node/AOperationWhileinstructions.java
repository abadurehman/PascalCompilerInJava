/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AOperationWhileinstructions extends PWhileinstructions
{
    private PWhileoperation _whileoperation_;

    public AOperationWhileinstructions()
    {
        // Constructor
    }

    public AOperationWhileinstructions(
        @SuppressWarnings("hiding") PWhileoperation _whileoperation_)
    {
        // Constructor
        setWhileoperation(_whileoperation_);

    }

    @Override
    public Object clone()
    {
        return new AOperationWhileinstructions(
            cloneNode(this._whileoperation_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOperationWhileinstructions(this);
    }

    public PWhileoperation getWhileoperation()
    {
        return this._whileoperation_;
    }

    public void setWhileoperation(PWhileoperation node)
    {
        if(this._whileoperation_ != null)
        {
            this._whileoperation_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._whileoperation_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._whileoperation_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._whileoperation_ == child)
        {
            this._whileoperation_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._whileoperation_ == oldChild)
        {
            setWhileoperation((PWhileoperation) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
