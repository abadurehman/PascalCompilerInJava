/* This file was generated by SableCC (http://www.sablecc.org/). */

package node;

import analysis.*;

@SuppressWarnings("nls")
public final class AMultInstructionsInstructions extends PInstructions
{
    private PInstructions _instructions_;
    private TSemikolon _semikolon_;
    private POperation _operation_;

    public AMultInstructionsInstructions()
    {
        // Constructor
    }

    public AMultInstructionsInstructions(
        @SuppressWarnings("hiding") PInstructions _instructions_,
        @SuppressWarnings("hiding") TSemikolon _semikolon_,
        @SuppressWarnings("hiding") POperation _operation_)
    {
        // Constructor
        setInstructions(_instructions_);

        setSemikolon(_semikolon_);

        setOperation(_operation_);

    }

    @Override
    public Object clone()
    {
        return new AMultInstructionsInstructions(
            cloneNode(this._instructions_),
            cloneNode(this._semikolon_),
            cloneNode(this._operation_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAMultInstructionsInstructions(this);
    }

    public PInstructions getInstructions()
    {
        return this._instructions_;
    }

    public void setInstructions(PInstructions node)
    {
        if(this._instructions_ != null)
        {
            this._instructions_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._instructions_ = node;
    }

    public TSemikolon getSemikolon()
    {
        return this._semikolon_;
    }

    public void setSemikolon(TSemikolon node)
    {
        if(this._semikolon_ != null)
        {
            this._semikolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semikolon_ = node;
    }

    public POperation getOperation()
    {
        return this._operation_;
    }

    public void setOperation(POperation node)
    {
        if(this._operation_ != null)
        {
            this._operation_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._operation_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._instructions_)
            + toString(this._semikolon_)
            + toString(this._operation_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._instructions_ == child)
        {
            this._instructions_ = null;
            return;
        }

        if(this._semikolon_ == child)
        {
            this._semikolon_ = null;
            return;
        }

        if(this._operation_ == child)
        {
            this._operation_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._instructions_ == oldChild)
        {
            setInstructions((PInstructions) newChild);
            return;
        }

        if(this._semikolon_ == oldChild)
        {
            setSemikolon((TSemikolon) newChild);
            return;
        }

        if(this._operation_ == oldChild)
        {
            setOperation((POperation) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
