/* This file was generated by SableCC (http://www.sablecc.org/). */

package lexer;

import java.io.*;
import node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 40:
                        {
                            @SuppressWarnings("hiding") Token token = new40(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteger(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolean(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVar(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssign(line, pos); }
    Token new5(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBegin(text, line, pos); }
    Token new6(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgramend(text, line, pos); }
    Token new7(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnd(text, line, pos); }
    Token new8(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgram(text, line, pos); }
    Token new9(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(text, line, pos); }
    Token new10(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThen(text, line, pos); }
    Token new11(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(text, line, pos); }
    Token new12(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhile(text, line, pos); }
    Token new13(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDo(text, line, pos); }
    Token new14(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWriteln(text, line, pos); }
    Token new15(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBreak(text, line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new21(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(text, line, pos); }
    Token new22(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(text, line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEq(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLt(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLe(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGe(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNe(line, pos); }
    Token new29(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnd(text, line, pos); }
    Token new30(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOr(text, line, pos); }
    Token new31(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXor(text, line, pos); }
    Token new32(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNot(text, line, pos); }
    Token new33(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTrue(text, line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalse(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new38(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TComma(line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlankOrComment(text, line, pos); }
    Token new40(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {40, 40, 5}, {41, 41, 6}, {42, 42, 7}, {43, 43, 8}, {44, 44, 9}, {45, 45, 10}, {46, 46, 11}, {47, 47, 12}, {48, 48, 13}, {49, 57, 14}, {58, 58, 15}, {59, 59, 16}, {60, 60, 17}, {61, 61, 18}, {62, 62, 19}, {65, 65, 20}, {66, 66, 21}, {67, 67, 22}, {68, 68, 23}, {69, 69, 24}, {70, 70, 25}, {71, 72, 22}, {73, 73, 26}, {74, 76, 22}, {77, 77, 27}, {78, 78, 28}, {79, 79, 29}, {80, 80, 30}, {81, 83, 22}, {84, 84, 31}, {85, 85, 22}, {86, 86, 32}, {87, 87, 33}, {88, 88, 34}, {89, 90, 22}, {97, 97, 35}, {98, 98, 36}, {99, 99, 37}, {100, 100, 38}, {101, 101, 39}, {102, 102, 40}, {103, 104, 37}, {105, 105, 41}, {106, 108, 37}, {109, 109, 42}, {110, 110, 43}, {111, 111, 44}, {112, 112, 45}, {113, 115, 37}, {116, 116, 46}, {117, 117, 37}, {118, 118, 47}, {119, 119, 48}, {120, 120, 49}, {121, 122, 37}, {123, 123, 50}, },
            {{9, 32, -2}, {47, 47, 12}, {123, 123, 50}, },
            {{9, 123, -3}, },
            {{9, 123, -3}, },
            {{9, 123, -3}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {},
            {{47, 47, 51}, },
            {},
            {{48, 57, 52}, },
            {{61, 61, 53}, },
            {},
            {{61, 61, 54}, {62, 62, 55}, },
            {},
            {{61, 61, 56}, },
            {{48, 57, 57}, {65, 77, 58}, {78, 78, 59}, {79, 90, 58}, {97, 109, 60}, {110, 110, 61}, {111, 122, 60}, },
            {{48, 57, 57}, {65, 68, 58}, {69, 69, 62}, {70, 78, 58}, {79, 79, 63}, {80, 81, 58}, {82, 82, 64}, {83, 90, 58}, {97, 100, 60}, {101, 101, 65}, {102, 110, 60}, {111, 111, 66}, {112, 113, 60}, {114, 114, 67}, {115, 122, 60}, },
            {{48, 57, 57}, {65, 90, 58}, {97, 122, 60}, },
            {{48, 57, 57}, {65, 72, 58}, {73, 73, 68}, {74, 78, 58}, {79, 79, 69}, {80, 90, 58}, {97, 104, 60}, {105, 105, 70}, {106, 110, 60}, {111, 111, 71}, {112, 122, 60}, },
            {{48, 57, 57}, {65, 75, 58}, {76, 76, 72}, {77, 77, 58}, {78, 78, 73}, {79, 90, 58}, {97, 107, 60}, {108, 108, 74}, {109, 109, 60}, {110, 110, 75}, {111, 122, 60}, },
            {{48, 57, 57}, {65, 65, 76}, {66, 90, 58}, {97, 97, 77}, {98, 122, 60}, },
            {{48, 57, 57}, {65, 69, 58}, {70, 70, 78}, {71, 77, 58}, {78, 78, 79}, {79, 90, 58}, {97, 101, 60}, {102, 102, 80}, {103, 109, 60}, {110, 110, 81}, {111, 122, 60}, },
            {{48, 57, 57}, {65, 78, 58}, {79, 79, 82}, {80, 90, 58}, {97, 110, 60}, {111, 111, 83}, {112, 122, 60}, },
            {{48, 78, -29}, {79, 79, 84}, {80, 110, -29}, {111, 111, 85}, {112, 122, 60}, },
            {{48, 57, 57}, {65, 81, 58}, {82, 82, 86}, {83, 90, 58}, {97, 113, 60}, {114, 114, 87}, {115, 122, 60}, },
            {{48, 81, -31}, {82, 82, 88}, {83, 113, -31}, {114, 114, 89}, {115, 122, 60}, },
            {{48, 57, 57}, {65, 71, 58}, {72, 72, 90}, {73, 81, 58}, {82, 82, 91}, {83, 90, 58}, {97, 103, 60}, {104, 104, 92}, {105, 113, 60}, {114, 114, 93}, {115, 122, 60}, },
            {{48, 57, 57}, {65, 65, 94}, {66, 90, 58}, {97, 97, 95}, {98, 122, 60}, },
            {{48, 71, -33}, {72, 72, 96}, {73, 81, 58}, {82, 82, 97}, {83, 103, -33}, {104, 104, 98}, {105, 113, 60}, {114, 114, 99}, {115, 122, 60}, },
            {{48, 78, -29}, {79, 79, 100}, {80, 110, -29}, {111, 111, 101}, {112, 122, 60}, },
            {{48, 122, -22}, },
            {{48, 122, -23}, },
            {{48, 122, -24}, },
            {{48, 122, -25}, },
            {{48, 122, -26}, },
            {{48, 122, -27}, },
            {{48, 122, -28}, },
            {{48, 122, -29}, },
            {{48, 122, -30}, },
            {{48, 122, -31}, },
            {{48, 122, -32}, },
            {{48, 122, -33}, },
            {{48, 122, -34}, },
            {{48, 122, -35}, },
            {{48, 122, -36}, },
            {{0, 8, 102}, {9, 9, 103}, {10, 10, 104}, {11, 12, 102}, {13, 13, 105}, {14, 31, 102}, {32, 32, 106}, {33, 122, 102}, {124, 124, 102}, {125, 125, 107}, {126, 127, 102}, },
            {{0, 8, 108}, {9, 9, 109}, {10, 10, 2}, {11, 12, 108}, {13, 13, 3}, {14, 31, 108}, {32, 32, 110}, {33, 46, 108}, {47, 47, 111}, {48, 122, 108}, {123, 123, 112}, {124, 127, 108}, },
            {{48, 57, 52}, },
            {},
            {},
            {},
            {},
            {{48, 57, 57}, {65, 90, 113}, {97, 122, 114}, },
            {{48, 122, -24}, },
            {{48, 57, 57}, {65, 67, 58}, {68, 68, 115}, {69, 90, 58}, {97, 99, 60}, {100, 100, 116}, {101, 122, 60}, },
            {{48, 122, -24}, },
            {{48, 122, -61}, },
            {{48, 57, 57}, {65, 70, 58}, {71, 71, 117}, {72, 90, 58}, {97, 102, 60}, {103, 103, 118}, {104, 122, 60}, },
            {{48, 78, -29}, {79, 79, 119}, {80, 110, -29}, {111, 111, 120}, {112, 122, 60}, },
            {{48, 68, -23}, {69, 69, 121}, {70, 90, 58}, {97, 100, 60}, {101, 101, 122}, {102, 122, 60}, },
            {{48, 122, -64}, },
            {{48, 122, -65}, },
            {{48, 122, -66}, },
            {{48, 57, 57}, {65, 85, 58}, {86, 86, 123}, {87, 90, 58}, {97, 117, 60}, {118, 118, 124}, {119, 122, 60}, },
            {{48, 122, -24}, },
            {{48, 122, -70}, },
            {{48, 122, -24}, },
            {{48, 57, 57}, {65, 82, 58}, {83, 83, 125}, {84, 90, 58}, {97, 114, 60}, {115, 115, 126}, {116, 122, 60}, },
            {{48, 67, -61}, {68, 68, 127}, {69, 99, -61}, {100, 100, 128}, {101, 122, 60}, },
            {{48, 122, -74}, },
            {{48, 122, -75}, },
            {{48, 75, -26}, {76, 76, 129}, {77, 90, 58}, {97, 107, 60}, {108, 108, 130}, {109, 122, 60}, },
            {{48, 122, -78}, },
            {{48, 122, -24}, },
            {{48, 57, 57}, {65, 83, 58}, {84, 84, 131}, {85, 90, 58}, {97, 115, 60}, {116, 116, 132}, {117, 122, 60}, },
            {{48, 122, -24}, },
            {{48, 122, -81}, },
            {{48, 67, -61}, {68, 68, 133}, {69, 99, -61}, {100, 100, 134}, {101, 122, 60}, },
            {{48, 122, -84}, },
            {{48, 83, -81}, {84, 84, 135}, {85, 115, -81}, {116, 116, 136}, {117, 122, 60}, },
            {{48, 122, -86}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 78, -29}, {79, 79, 137}, {80, 110, -29}, {111, 111, 138}, {112, 122, 60}, },
            {{48, 122, -90}, },
            {{48, 68, -23}, {69, 69, 139}, {70, 100, -66}, {101, 101, 140}, {102, 122, 60}, },
            {{48, 57, 57}, {65, 84, 58}, {85, 85, 141}, {86, 90, 58}, {97, 116, 60}, {117, 117, 142}, {118, 122, 60}, },
            {{48, 122, -92}, },
            {{48, 122, -93}, },
            {{48, 81, -31}, {82, 82, 143}, {83, 113, -31}, {114, 114, 144}, {115, 122, 60}, },
            {{48, 122, -96}, },
            {{48, 72, -25}, {73, 73, 145}, {74, 90, 58}, {97, 104, 60}, {105, 105, 146}, {106, 122, 60}, },
            {{48, 72, -25}, {73, 73, 147}, {74, 104, -98}, {105, 105, 148}, {106, 122, 60}, },
            {{48, 122, -98}, },
            {{48, 122, -99}, },
            {{48, 81, -31}, {82, 82, 149}, {83, 113, -31}, {114, 114, 150}, {115, 122, 60}, },
            {{48, 122, -102}, },
            {{0, 127, -52}, },
            {{0, 127, -52}, },
            {{0, 127, -52}, },
            {{0, 127, -52}, },
            {{0, 127, -52}, },
            {{9, 123, -3}, },
            {{0, 127, -53}, },
            {{0, 127, -53}, },
            {{0, 127, -53}, },
            {{0, 46, -53}, {47, 47, 151}, {48, 127, -53}, },
            {{0, 8, 152}, {9, 9, 153}, {10, 10, 154}, {11, 12, 152}, {13, 13, 155}, {14, 31, 152}, {32, 32, 156}, {33, 46, 152}, {47, 47, 157}, {48, 122, 152}, {123, 123, 112}, {124, 124, 152}, {125, 125, 158}, {126, 127, 152}, },
            {{48, 122, -59}, },
            {{48, 122, -59}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 72, -25}, {73, 73, 159}, {74, 104, -98}, {105, 105, 160}, {106, 122, 60}, },
            {{48, 122, -119}, },
            {{48, 75, -26}, {76, 76, 161}, {77, 107, -78}, {108, 108, 162}, {109, 122, 60}, },
            {{48, 122, -121}, },
            {{48, 57, 57}, {65, 65, 163}, {66, 90, 58}, {97, 97, 164}, {98, 122, 60}, },
            {{48, 122, -123}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 68, -23}, {69, 69, 165}, {70, 100, -66}, {101, 101, 166}, {102, 122, 60}, },
            {{48, 122, -127}, },
            {{46, 46, 167}, {48, 122, -24}, },
            {{46, 122, -129}, },
            {{48, 82, -74}, {83, 83, 168}, {84, 114, -74}, {115, 115, 169}, {116, 122, 60}, },
            {{48, 122, -131}, },
            {{48, 68, -23}, {69, 69, 170}, {70, 100, -66}, {101, 101, 171}, {102, 122, 60}, },
            {{48, 122, -133}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 70, -64}, {71, 71, 172}, {72, 102, -64}, {103, 103, 173}, {104, 122, 60}, },
            {{48, 122, -139}, },
            {{48, 77, -22}, {78, 78, 174}, {79, 109, -22}, {110, 110, 175}, {111, 122, 60}, },
            {{48, 122, -141}, },
            {{48, 68, -23}, {69, 69, 176}, {70, 100, -66}, {101, 101, 177}, {102, 122, 60}, },
            {{48, 122, -143}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 75, -26}, {76, 76, 178}, {77, 107, -78}, {108, 108, 179}, {109, 122, 60}, },
            {{48, 122, -147}, },
            {{48, 83, -81}, {84, 84, 180}, {85, 115, -81}, {116, 116, 181}, {117, 122, 60}, },
            {{48, 122, -149}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{0, 127, -113}, },
            {{0, 127, -114}, },
            {{0, 127, -114}, },
            {{0, 8, 102}, {9, 9, 182}, {10, 10, 154}, {11, 12, 102}, {13, 13, 155}, {14, 31, 102}, {32, 32, 183}, {33, 46, 102}, {47, 47, 184}, {48, 122, 102}, {123, 123, 50}, {124, 127, -52}, },
            {{0, 127, -156}, },
            {{0, 127, -114}, },
            {{0, 46, -114}, {47, 47, 185}, {48, 127, -114}, },
            {{0, 127, -53}, },
            {{48, 77, -22}, {78, 78, 186}, {79, 109, -22}, {110, 110, 187}, {111, 122, 60}, },
            {{48, 122, -161}, },
            {{48, 68, -23}, {69, 69, 188}, {70, 100, -66}, {101, 101, 189}, {102, 122, 60}, },
            {{48, 122, -163}, },
            {{48, 57, 57}, {65, 74, 58}, {75, 75, 190}, {76, 90, 58}, {97, 106, 60}, {107, 107, 191}, {108, 122, 60}, },
            {{48, 122, -165}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {},
            {{48, 68, -23}, {69, 69, 192}, {70, 100, -66}, {101, 101, 193}, {102, 122, 60}, },
            {{48, 122, -170}, },
            {{48, 70, -64}, {71, 71, 194}, {72, 102, -64}, {103, 103, 195}, {104, 122, 60}, },
            {{48, 122, -172}, },
            {{48, 81, -31}, {82, 82, 196}, {83, 113, -31}, {114, 114, 197}, {115, 122, 60}, },
            {{48, 122, -174}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 68, -23}, {69, 69, 198}, {70, 100, -66}, {101, 101, 199}, {102, 122, 60}, },
            {{48, 122, -180}, },
            {{48, 68, -23}, {69, 69, 200}, {70, 100, -66}, {101, 101, 201}, {102, 122, 60}, },
            {{48, 122, -182}, },
            {{0, 127, -156}, },
            {{0, 127, -156}, },
            {{0, 32, -52}, {33, 46, 102}, {47, 47, 202}, {48, 122, 102}, {124, 127, -52}, },
            {{0, 127, -159}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 57, 57}, {65, 65, 203}, {66, 90, 58}, {97, 97, 204}, {98, 122, 60}, },
            {{48, 122, -190}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 68, -23}, {69, 69, 205}, {70, 100, -66}, {101, 101, 206}, {102, 122, 60}, },
            {{48, 122, -196}, },
            {{48, 57, 57}, {65, 65, 207}, {66, 90, 58}, {97, 97, 208}, {98, 122, 60}, },
            {{48, 122, -198}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 75, -26}, {76, 76, 209}, {77, 107, -78}, {108, 108, 210}, {109, 122, 60}, },
            {{48, 122, -202}, },
            {{0, 127, -114}, },
            {{48, 77, -22}, {78, 78, 211}, {79, 109, -22}, {110, 110, 212}, {111, 122, 60}, },
            {{48, 122, -205}, },
            {{48, 81, -31}, {82, 82, 213}, {83, 113, -31}, {114, 114, 214}, {115, 122, 60}, },
            {{48, 122, -207}, },
            {{48, 57, 57}, {65, 76, 58}, {77, 77, 215}, {78, 90, 58}, {97, 108, 60}, {109, 109, 216}, {110, 122, 60}, },
            {{48, 122, -209}, },
            {{48, 77, -22}, {78, 78, 217}, {79, 109, -22}, {110, 110, 218}, {111, 122, 60}, },
            {{48, 122, -211}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
            {{48, 122, -24}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {39, 39, 39, 39, 39, 16, 17, 20, 18, 38, 19, 37, -1, 3, 3, 35, 36, 24, 23, 25, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, -1, 39, 3, 4, 26, 28, 27, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 13, 40, 13, 40, 40, 40, 40, 40, 40, 9, 40, 9, 40, 40, 40, 40, 40, 30, 30, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, 40, -1, -1, -1, -1, -1, 39, 39, 39, 39, 39, 39, 40, 40, 29, 29, 40, 40, 40, 40, 40, 40, 21, 21, 40, 40, 7, 7, 40, 40, 40, 40, 22, 22, 32, 32, 40, 40, 40, 40, 40, 40, 2, 2, 40, 40, 40, 40, 31, 31, 39, 39, 39, 39, 39, 39, 39, 39, 40, 40, 40, 40, 40, 40, 11, 11, 6, 40, 40, 40, 40, 40, 40, 10, 10, 33, 33, 40, 40, 40, 40, 39, 39, -1, 39, 5, 5, 40, 40, 15, 15, 34, 34, 40, 40, 40, 40, 12, 12, 40, 40, 39, 40, 40, 40, 40, 40, 40, 40, 40, 1, 1, 0, 0, 8, 8, 14, 14, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
