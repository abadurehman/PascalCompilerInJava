/* This file was generated by SableCC (http://www.sablecc.org/). */

package lexer;

import java.io.*;
import node.*;

@SuppressWarnings("nls")
public class Lexer
{
    protected Token token;
    protected State state = State.INITIAL;

    private IPushbackReader in;
    private int line;
    private int pos;
    private boolean cr;
    private boolean eof;
    private final StringBuffer text = new StringBuffer();

    @SuppressWarnings("unused")
    protected void filter() throws LexerException, IOException
    {
        // Do nothing
    }

    public Lexer(@SuppressWarnings("hiding") final PushbackReader in)
    {
        this.in = new IPushbackReader() {

            private PushbackReader pushbackReader = in;
            
            @Override
            public void unread(int c) throws IOException {
                pushbackReader.unread(c);
            }
            
            @Override
            public int read() throws IOException {
                return pushbackReader.read();
            }
        };
    }
 
    public Lexer(@SuppressWarnings("hiding") IPushbackReader in)
    {
        this.in = in;
    }
 
    public Token peek() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        return this.token;
    }

    public Token next() throws LexerException, IOException
    {
        while(this.token == null)
        {
            this.token = getToken();
            filter();
        }

        Token result = this.token;
        this.token = null;
        return result;
    }

    protected Token getToken() throws IOException, LexerException
    {
        int dfa_state = 0;

        int start_pos = this.pos;
        int start_line = this.line;

        int accept_state = -1;
        int accept_token = -1;
        int accept_length = -1;
        int accept_pos = -1;
        int accept_line = -1;

        @SuppressWarnings("hiding") int[][][] gotoTable = Lexer.gotoTable[this.state.id()];
        @SuppressWarnings("hiding") int[] accept = Lexer.accept[this.state.id()];
        this.text.setLength(0);

        while(true)
        {
            int c = getChar();

            if(c != -1)
            {
                switch(c)
                {
                case 10:
                    if(this.cr)
                    {
                        this.cr = false;
                    }
                    else
                    {
                        this.line++;
                        this.pos = 0;
                    }
                    break;
                case 13:
                    this.line++;
                    this.pos = 0;
                    this.cr = true;
                    break;
                default:
                    this.pos++;
                    this.cr = false;
                    break;
                }

                this.text.append((char) c);

                do
                {
                    int oldState = (dfa_state < -1) ? (-2 -dfa_state) : dfa_state;

                    dfa_state = -1;

                    int[][] tmp1 =  gotoTable[oldState];
                    int low = 0;
                    int high = tmp1.length - 1;

                    while(low <= high)
                    {
                        // int middle = (low + high) / 2;
                        int middle = (low + high) >>> 1;
                        int[] tmp2 = tmp1[middle];

                        if(c < tmp2[0])
                        {
                            high = middle - 1;
                        }
                        else if(c > tmp2[1])
                        {
                            low = middle + 1;
                        }
                        else
                        {
                            dfa_state = tmp2[2];
                            break;
                        }
                    }
                }while(dfa_state < -1);
            }
            else
            {
                dfa_state = -1;
            }

            if(dfa_state >= 0)
            {
                if(accept[dfa_state] != -1)
                {
                    accept_state = dfa_state;
                    accept_token = accept[dfa_state];
                    accept_length = this.text.length();
                    accept_pos = this.pos;
                    accept_line = this.line;
                }
            }
            else
            {
                if(accept_state != -1)
                {
                    switch(accept_token)
                    {
                    case 0:
                        {
                            @SuppressWarnings("hiding") Token token = new0(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 1:
                        {
                            @SuppressWarnings("hiding") Token token = new1(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 2:
                        {
                            @SuppressWarnings("hiding") Token token = new2(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 3:
                        {
                            @SuppressWarnings("hiding") Token token = new3(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 4:
                        {
                            @SuppressWarnings("hiding") Token token = new4(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 5:
                        {
                            @SuppressWarnings("hiding") Token token = new5(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 6:
                        {
                            @SuppressWarnings("hiding") Token token = new6(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 7:
                        {
                            @SuppressWarnings("hiding") Token token = new7(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 8:
                        {
                            @SuppressWarnings("hiding") Token token = new8(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 9:
                        {
                            @SuppressWarnings("hiding") Token token = new9(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 10:
                        {
                            @SuppressWarnings("hiding") Token token = new10(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 11:
                        {
                            @SuppressWarnings("hiding") Token token = new11(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 12:
                        {
                            @SuppressWarnings("hiding") Token token = new12(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 13:
                        {
                            @SuppressWarnings("hiding") Token token = new13(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 14:
                        {
                            @SuppressWarnings("hiding") Token token = new14(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 15:
                        {
                            @SuppressWarnings("hiding") Token token = new15(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 16:
                        {
                            @SuppressWarnings("hiding") Token token = new16(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 17:
                        {
                            @SuppressWarnings("hiding") Token token = new17(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 18:
                        {
                            @SuppressWarnings("hiding") Token token = new18(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 19:
                        {
                            @SuppressWarnings("hiding") Token token = new19(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 20:
                        {
                            @SuppressWarnings("hiding") Token token = new20(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 21:
                        {
                            @SuppressWarnings("hiding") Token token = new21(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 22:
                        {
                            @SuppressWarnings("hiding") Token token = new22(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 23:
                        {
                            @SuppressWarnings("hiding") Token token = new23(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 24:
                        {
                            @SuppressWarnings("hiding") Token token = new24(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 25:
                        {
                            @SuppressWarnings("hiding") Token token = new25(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 26:
                        {
                            @SuppressWarnings("hiding") Token token = new26(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 27:
                        {
                            @SuppressWarnings("hiding") Token token = new27(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 28:
                        {
                            @SuppressWarnings("hiding") Token token = new28(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 29:
                        {
                            @SuppressWarnings("hiding") Token token = new29(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 30:
                        {
                            @SuppressWarnings("hiding") Token token = new30(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 31:
                        {
                            @SuppressWarnings("hiding") Token token = new31(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 32:
                        {
                            @SuppressWarnings("hiding") Token token = new32(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 33:
                        {
                            @SuppressWarnings("hiding") Token token = new33(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 34:
                        {
                            @SuppressWarnings("hiding") Token token = new34(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 35:
                        {
                            @SuppressWarnings("hiding") Token token = new35(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 36:
                        {
                            @SuppressWarnings("hiding") Token token = new36(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 37:
                        {
                            @SuppressWarnings("hiding") Token token = new37(
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 38:
                        {
                            @SuppressWarnings("hiding") Token token = new38(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    case 39:
                        {
                            @SuppressWarnings("hiding") Token token = new39(
                                getText(accept_length),
                                start_line + 1,
                                start_pos + 1);
                            pushBack(accept_length);
                            this.pos = accept_pos;
                            this.line = accept_line;
                            return token;
                        }
                    }
                }
                else
                {
                    if(this.text.length() > 0)
                    {
                        throw new LexerException(
                            new InvalidToken(this.text.substring(0, 1), start_line + 1, start_pos + 1),
                            "[" + (start_line + 1) + "," + (start_pos + 1) + "]" +
                            " Unknown token: " + this.text);
                    }

                    @SuppressWarnings("hiding") EOF token = new EOF(
                        start_line + 1,
                        start_pos + 1);
                    return token;
                }
            }
        }
    }

    Token new0(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TInteger(text, line, pos); }
    Token new1(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBoolean(text, line, pos); }
    Token new2(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TVar(text, line, pos); }
    Token new3(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNumber(text, line, pos); }
    Token new4(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAssign(line, pos); }
    Token new5(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBegin(text, line, pos); }
    Token new6(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgramend(text, line, pos); }
    Token new7(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEnd(text, line, pos); }
    Token new8(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TProgram(text, line, pos); }
    Token new9(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIf(text, line, pos); }
    Token new10(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TThen(text, line, pos); }
    Token new11(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TElse(text, line, pos); }
    Token new12(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWhile(text, line, pos); }
    Token new13(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDo(text, line, pos); }
    Token new14(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TWriteln(text, line, pos); }
    Token new15(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBreak(text, line, pos); }
    Token new16(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLPar(line, pos); }
    Token new17(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TRPar(line, pos); }
    Token new18(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TPlus(line, pos); }
    Token new19(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMinus(line, pos); }
    Token new20(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMult(line, pos); }
    Token new21(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDiv(text, line, pos); }
    Token new22(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TMod(text, line, pos); }
    Token new23(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TEq(line, pos); }
    Token new24(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLt(line, pos); }
    Token new25(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGt(line, pos); }
    Token new26(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TLe(line, pos); }
    Token new27(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TGe(line, pos); }
    Token new28(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNe(line, pos); }
    Token new29(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TAnd(text, line, pos); }
    Token new30(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TOr(text, line, pos); }
    Token new31(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TXor(text, line, pos); }
    Token new32(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TNot(text, line, pos); }
    Token new33(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TTrue(text, line, pos); }
    Token new34(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TFalse(text, line, pos); }
    Token new35(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TColon(line, pos); }
    Token new36(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TSemicolon(line, pos); }
    Token new37(@SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TDot(line, pos); }
    Token new38(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TBlankOrComment(text, line, pos); }
    Token new39(@SuppressWarnings("hiding") String text, @SuppressWarnings("hiding") int line, @SuppressWarnings("hiding") int pos) { return new TIdentifier(text, line, pos); }

    private int getChar() throws IOException
    {
        if(this.eof)
        {
            return -1;
        }

        int result = this.in.read();

        if(result == -1)
        {
            this.eof = true;
        }

        return result;
    }

    private void pushBack(int acceptLength) throws IOException
    {
        int length = this.text.length();
        for(int i = length - 1; i >= acceptLength; i--)
        {
            this.eof = false;

            this.in.unread(this.text.charAt(i));
        }
    }

    protected void unread(@SuppressWarnings("hiding") Token token) throws IOException
    {
        @SuppressWarnings("hiding") String text = token.getText();
        int length = text.length();

        for(int i = length - 1; i >= 0; i--)
        {
            this.eof = false;

            this.in.unread(text.charAt(i));
        }

        this.pos = token.getPos() - 1;
        this.line = token.getLine() - 1;
    }

    private String getText(int acceptLength)
    {
        StringBuffer s = new StringBuffer(acceptLength);
        for(int i = 0; i < acceptLength; i++)
        {
            s.append(this.text.charAt(i));
        }

        return s.toString();
    }

    private static int[][][][] gotoTable;
/*  {
        { // INITIAL
            {{9, 9, 1}, {10, 10, 2}, {13, 13, 3}, {32, 32, 4}, {40, 40, 5}, {41, 41, 6}, {42, 42, 7}, {43, 43, 8}, {45, 45, 9}, {46, 46, 10}, {47, 47, 11}, {48, 48, 12}, {49, 57, 13}, {58, 58, 14}, {59, 59, 15}, {60, 60, 16}, {61, 61, 17}, {62, 62, 18}, {65, 65, 19}, {66, 66, 20}, {67, 67, 21}, {68, 68, 22}, {69, 69, 23}, {70, 70, 24}, {71, 72, 21}, {73, 73, 25}, {74, 76, 21}, {77, 77, 26}, {78, 78, 27}, {79, 79, 28}, {80, 80, 29}, {81, 83, 21}, {84, 84, 30}, {85, 85, 21}, {86, 86, 31}, {87, 87, 32}, {88, 88, 33}, {89, 90, 21}, {97, 97, 34}, {98, 98, 35}, {99, 99, 36}, {100, 100, 37}, {101, 101, 38}, {102, 102, 39}, {103, 104, 36}, {105, 105, 40}, {106, 108, 36}, {109, 109, 41}, {110, 110, 42}, {111, 111, 43}, {112, 112, 44}, {113, 115, 36}, {116, 116, 45}, {117, 117, 36}, {118, 118, 46}, {119, 119, 47}, {120, 120, 48}, {121, 122, 36}, {123, 123, 49}, },
            {{9, 32, -2}, {47, 47, 11}, {123, 123, 49}, },
            {{9, 123, -3}, },
            {{9, 123, -3}, },
            {{9, 123, -3}, },
            {},
            {},
            {},
            {},
            {},
            {},
            {{47, 47, 50}, },
            {},
            {{48, 57, 51}, },
            {{61, 61, 52}, },
            {},
            {{61, 61, 53}, {62, 62, 54}, },
            {},
            {{61, 61, 55}, },
            {{48, 57, 56}, {65, 77, 57}, {78, 78, 58}, {79, 90, 57}, {97, 109, 59}, {110, 110, 60}, {111, 122, 59}, },
            {{48, 57, 56}, {65, 68, 57}, {69, 69, 61}, {70, 78, 57}, {79, 79, 62}, {80, 81, 57}, {82, 82, 63}, {83, 90, 57}, {97, 100, 59}, {101, 101, 64}, {102, 110, 59}, {111, 111, 65}, {112, 113, 59}, {114, 114, 66}, {115, 122, 59}, },
            {{48, 57, 56}, {65, 90, 57}, {97, 122, 59}, },
            {{48, 57, 56}, {65, 72, 57}, {73, 73, 67}, {74, 78, 57}, {79, 79, 68}, {80, 90, 57}, {97, 104, 59}, {105, 105, 69}, {106, 110, 59}, {111, 111, 70}, {112, 122, 59}, },
            {{48, 57, 56}, {65, 75, 57}, {76, 76, 71}, {77, 77, 57}, {78, 78, 72}, {79, 90, 57}, {97, 107, 59}, {108, 108, 73}, {109, 109, 59}, {110, 110, 74}, {111, 122, 59}, },
            {{48, 57, 56}, {65, 65, 75}, {66, 90, 57}, {97, 97, 76}, {98, 122, 59}, },
            {{48, 57, 56}, {65, 69, 57}, {70, 70, 77}, {71, 77, 57}, {78, 78, 78}, {79, 90, 57}, {97, 101, 59}, {102, 102, 79}, {103, 109, 59}, {110, 110, 80}, {111, 122, 59}, },
            {{48, 57, 56}, {65, 78, 57}, {79, 79, 81}, {80, 90, 57}, {97, 110, 59}, {111, 111, 82}, {112, 122, 59}, },
            {{48, 78, -28}, {79, 79, 83}, {80, 110, -28}, {111, 111, 84}, {112, 122, 59}, },
            {{48, 57, 56}, {65, 81, 57}, {82, 82, 85}, {83, 90, 57}, {97, 113, 59}, {114, 114, 86}, {115, 122, 59}, },
            {{48, 81, -30}, {82, 82, 87}, {83, 113, -30}, {114, 114, 88}, {115, 122, 59}, },
            {{48, 57, 56}, {65, 71, 57}, {72, 72, 89}, {73, 81, 57}, {82, 82, 90}, {83, 90, 57}, {97, 103, 59}, {104, 104, 91}, {105, 113, 59}, {114, 114, 92}, {115, 122, 59}, },
            {{48, 57, 56}, {65, 65, 93}, {66, 90, 57}, {97, 97, 94}, {98, 122, 59}, },
            {{48, 71, -32}, {72, 72, 95}, {73, 81, 57}, {82, 82, 96}, {83, 103, -32}, {104, 104, 97}, {105, 113, 59}, {114, 114, 98}, {115, 122, 59}, },
            {{48, 78, -28}, {79, 79, 99}, {80, 110, -28}, {111, 111, 100}, {112, 122, 59}, },
            {{48, 122, -21}, },
            {{48, 122, -22}, },
            {{48, 122, -23}, },
            {{48, 122, -24}, },
            {{48, 122, -25}, },
            {{48, 122, -26}, },
            {{48, 122, -27}, },
            {{48, 122, -28}, },
            {{48, 122, -29}, },
            {{48, 122, -30}, },
            {{48, 122, -31}, },
            {{48, 122, -32}, },
            {{48, 122, -33}, },
            {{48, 122, -34}, },
            {{48, 122, -35}, },
            {{0, 8, 101}, {9, 9, 102}, {10, 10, 103}, {11, 12, 101}, {13, 13, 104}, {14, 31, 101}, {32, 32, 105}, {33, 122, 101}, {124, 124, 101}, {125, 125, 106}, {126, 127, 101}, },
            {{0, 8, 107}, {9, 9, 108}, {10, 10, 2}, {11, 12, 107}, {13, 13, 3}, {14, 31, 107}, {32, 32, 109}, {33, 46, 107}, {47, 47, 110}, {48, 122, 107}, {123, 123, 111}, {124, 127, 107}, },
            {{48, 57, 51}, },
            {},
            {},
            {},
            {},
            {{48, 57, 56}, {65, 90, 112}, {97, 122, 113}, },
            {{48, 122, -23}, },
            {{48, 57, 56}, {65, 67, 57}, {68, 68, 114}, {69, 90, 57}, {97, 99, 59}, {100, 100, 115}, {101, 122, 59}, },
            {{48, 122, -23}, },
            {{48, 122, -60}, },
            {{48, 57, 56}, {65, 70, 57}, {71, 71, 116}, {72, 90, 57}, {97, 102, 59}, {103, 103, 117}, {104, 122, 59}, },
            {{48, 78, -28}, {79, 79, 118}, {80, 110, -28}, {111, 111, 119}, {112, 122, 59}, },
            {{48, 68, -22}, {69, 69, 120}, {70, 90, 57}, {97, 100, 59}, {101, 101, 121}, {102, 122, 59}, },
            {{48, 122, -63}, },
            {{48, 122, -64}, },
            {{48, 122, -65}, },
            {{48, 57, 56}, {65, 85, 57}, {86, 86, 122}, {87, 90, 57}, {97, 117, 59}, {118, 118, 123}, {119, 122, 59}, },
            {{48, 122, -23}, },
            {{48, 122, -69}, },
            {{48, 122, -23}, },
            {{48, 57, 56}, {65, 82, 57}, {83, 83, 124}, {84, 90, 57}, {97, 114, 59}, {115, 115, 125}, {116, 122, 59}, },
            {{48, 67, -60}, {68, 68, 126}, {69, 99, -60}, {100, 100, 127}, {101, 122, 59}, },
            {{48, 122, -73}, },
            {{48, 122, -74}, },
            {{48, 75, -25}, {76, 76, 128}, {77, 90, 57}, {97, 107, 59}, {108, 108, 129}, {109, 122, 59}, },
            {{48, 122, -77}, },
            {{48, 122, -23}, },
            {{48, 57, 56}, {65, 83, 57}, {84, 84, 130}, {85, 90, 57}, {97, 115, 59}, {116, 116, 131}, {117, 122, 59}, },
            {{48, 122, -23}, },
            {{48, 122, -80}, },
            {{48, 67, -60}, {68, 68, 132}, {69, 99, -60}, {100, 100, 133}, {101, 122, 59}, },
            {{48, 122, -83}, },
            {{48, 83, -80}, {84, 84, 134}, {85, 115, -80}, {116, 116, 135}, {117, 122, 59}, },
            {{48, 122, -85}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 78, -28}, {79, 79, 136}, {80, 110, -28}, {111, 111, 137}, {112, 122, 59}, },
            {{48, 122, -89}, },
            {{48, 68, -22}, {69, 69, 138}, {70, 100, -65}, {101, 101, 139}, {102, 122, 59}, },
            {{48, 57, 56}, {65, 84, 57}, {85, 85, 140}, {86, 90, 57}, {97, 116, 59}, {117, 117, 141}, {118, 122, 59}, },
            {{48, 122, -91}, },
            {{48, 122, -92}, },
            {{48, 81, -30}, {82, 82, 142}, {83, 113, -30}, {114, 114, 143}, {115, 122, 59}, },
            {{48, 122, -95}, },
            {{48, 72, -24}, {73, 73, 144}, {74, 90, 57}, {97, 104, 59}, {105, 105, 145}, {106, 122, 59}, },
            {{48, 72, -24}, {73, 73, 146}, {74, 104, -97}, {105, 105, 147}, {106, 122, 59}, },
            {{48, 122, -97}, },
            {{48, 122, -98}, },
            {{48, 81, -30}, {82, 82, 148}, {83, 113, -30}, {114, 114, 149}, {115, 122, 59}, },
            {{48, 122, -101}, },
            {{0, 127, -51}, },
            {{0, 127, -51}, },
            {{0, 127, -51}, },
            {{0, 127, -51}, },
            {{0, 127, -51}, },
            {{9, 123, -3}, },
            {{0, 127, -52}, },
            {{0, 127, -52}, },
            {{0, 127, -52}, },
            {{0, 46, -52}, {47, 47, 150}, {48, 127, -52}, },
            {{0, 8, 151}, {9, 9, 152}, {10, 10, 153}, {11, 12, 151}, {13, 13, 154}, {14, 31, 151}, {32, 32, 155}, {33, 46, 151}, {47, 47, 156}, {48, 122, 151}, {123, 123, 111}, {124, 124, 151}, {125, 125, 157}, {126, 127, 151}, },
            {{48, 122, -58}, },
            {{48, 122, -58}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 72, -24}, {73, 73, 158}, {74, 104, -97}, {105, 105, 159}, {106, 122, 59}, },
            {{48, 122, -118}, },
            {{48, 75, -25}, {76, 76, 160}, {77, 107, -77}, {108, 108, 161}, {109, 122, 59}, },
            {{48, 122, -120}, },
            {{48, 57, 56}, {65, 65, 162}, {66, 90, 57}, {97, 97, 163}, {98, 122, 59}, },
            {{48, 122, -122}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 68, -22}, {69, 69, 164}, {70, 100, -65}, {101, 101, 165}, {102, 122, 59}, },
            {{48, 122, -126}, },
            {{46, 46, 166}, {48, 122, -23}, },
            {{46, 122, -128}, },
            {{48, 82, -73}, {83, 83, 167}, {84, 114, -73}, {115, 115, 168}, {116, 122, 59}, },
            {{48, 122, -130}, },
            {{48, 68, -22}, {69, 69, 169}, {70, 100, -65}, {101, 101, 170}, {102, 122, 59}, },
            {{48, 122, -132}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 70, -63}, {71, 71, 171}, {72, 102, -63}, {103, 103, 172}, {104, 122, 59}, },
            {{48, 122, -138}, },
            {{48, 77, -21}, {78, 78, 173}, {79, 109, -21}, {110, 110, 174}, {111, 122, 59}, },
            {{48, 122, -140}, },
            {{48, 68, -22}, {69, 69, 175}, {70, 100, -65}, {101, 101, 176}, {102, 122, 59}, },
            {{48, 122, -142}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 75, -25}, {76, 76, 177}, {77, 107, -77}, {108, 108, 178}, {109, 122, 59}, },
            {{48, 122, -146}, },
            {{48, 83, -80}, {84, 84, 179}, {85, 115, -80}, {116, 116, 180}, {117, 122, 59}, },
            {{48, 122, -148}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{0, 127, -112}, },
            {{0, 127, -113}, },
            {{0, 127, -113}, },
            {{0, 8, 101}, {9, 9, 181}, {10, 10, 153}, {11, 12, 101}, {13, 13, 154}, {14, 31, 101}, {32, 32, 182}, {33, 46, 101}, {47, 47, 183}, {48, 122, 101}, {123, 123, 49}, {124, 127, -51}, },
            {{0, 127, -155}, },
            {{0, 127, -113}, },
            {{0, 46, -113}, {47, 47, 184}, {48, 127, -113}, },
            {{0, 127, -52}, },
            {{48, 77, -21}, {78, 78, 185}, {79, 109, -21}, {110, 110, 186}, {111, 122, 59}, },
            {{48, 122, -160}, },
            {{48, 68, -22}, {69, 69, 187}, {70, 100, -65}, {101, 101, 188}, {102, 122, 59}, },
            {{48, 122, -162}, },
            {{48, 57, 56}, {65, 74, 57}, {75, 75, 189}, {76, 90, 57}, {97, 106, 59}, {107, 107, 190}, {108, 122, 59}, },
            {{48, 122, -164}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {},
            {{48, 68, -22}, {69, 69, 191}, {70, 100, -65}, {101, 101, 192}, {102, 122, 59}, },
            {{48, 122, -169}, },
            {{48, 70, -63}, {71, 71, 193}, {72, 102, -63}, {103, 103, 194}, {104, 122, 59}, },
            {{48, 122, -171}, },
            {{48, 81, -30}, {82, 82, 195}, {83, 113, -30}, {114, 114, 196}, {115, 122, 59}, },
            {{48, 122, -173}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 68, -22}, {69, 69, 197}, {70, 100, -65}, {101, 101, 198}, {102, 122, 59}, },
            {{48, 122, -179}, },
            {{48, 68, -22}, {69, 69, 199}, {70, 100, -65}, {101, 101, 200}, {102, 122, 59}, },
            {{48, 122, -181}, },
            {{0, 127, -155}, },
            {{0, 127, -155}, },
            {{0, 32, -51}, {33, 46, 101}, {47, 47, 201}, {48, 122, 101}, {124, 127, -51}, },
            {{0, 127, -158}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 57, 56}, {65, 65, 202}, {66, 90, 57}, {97, 97, 203}, {98, 122, 59}, },
            {{48, 122, -189}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 68, -22}, {69, 69, 204}, {70, 100, -65}, {101, 101, 205}, {102, 122, 59}, },
            {{48, 122, -195}, },
            {{48, 57, 56}, {65, 65, 206}, {66, 90, 57}, {97, 97, 207}, {98, 122, 59}, },
            {{48, 122, -197}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 75, -25}, {76, 76, 208}, {77, 107, -77}, {108, 108, 209}, {109, 122, 59}, },
            {{48, 122, -201}, },
            {{0, 127, -113}, },
            {{48, 77, -21}, {78, 78, 210}, {79, 109, -21}, {110, 110, 211}, {111, 122, 59}, },
            {{48, 122, -204}, },
            {{48, 81, -30}, {82, 82, 212}, {83, 113, -30}, {114, 114, 213}, {115, 122, 59}, },
            {{48, 122, -206}, },
            {{48, 57, 56}, {65, 76, 57}, {77, 77, 214}, {78, 90, 57}, {97, 108, 59}, {109, 109, 215}, {110, 122, 59}, },
            {{48, 122, -208}, },
            {{48, 77, -21}, {78, 78, 216}, {79, 109, -21}, {110, 110, 217}, {111, 122, 59}, },
            {{48, 122, -210}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
            {{48, 122, -23}, },
        }
    };*/

    private static int[][] accept;
/*  {
        // INITIAL
        {38, 38, 38, 38, 38, 16, 17, 20, 18, 19, 37, -1, 3, 3, 35, 36, 24, 23, 25, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, -1, 38, 3, 4, 26, 28, 27, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 13, 39, 13, 39, 39, 39, 39, 39, 39, 9, 39, 9, 39, 39, 39, 39, 39, 30, 30, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, 39, -1, -1, -1, -1, -1, 38, 38, 38, 38, 38, 38, 39, 39, 29, 29, 39, 39, 39, 39, 39, 39, 21, 21, 39, 39, 7, 7, 39, 39, 39, 39, 22, 22, 32, 32, 39, 39, 39, 39, 39, 39, 2, 2, 39, 39, 39, 39, 31, 31, 38, 38, 38, 38, 38, 38, 38, 38, 39, 39, 39, 39, 39, 39, 11, 11, 6, 39, 39, 39, 39, 39, 39, 10, 10, 33, 33, 39, 39, 39, 39, 38, 38, -1, 38, 5, 5, 39, 39, 15, 15, 34, 34, 39, 39, 39, 39, 12, 12, 39, 39, 38, 39, 39, 39, 39, 39, 39, 39, 39, 1, 1, 0, 0, 8, 8, 14, 14, },

    };*/

    public static class State
    {
        public final static State INITIAL = new State(0);

        private int id;

        private State(@SuppressWarnings("hiding") int id)
        {
            this.id = id;
        }

        public int id()
        {
            return this.id;
        }
    }

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Lexer.class.getResourceAsStream("lexer.dat")));

            // read gotoTable
            int length = s.readInt();
            gotoTable = new int[length][][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][][];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                    length = s.readInt();
                    gotoTable[i][j] = new int[length][3];
                    for(int k = 0; k < gotoTable[i][j].length; k++)
                    {
                        for(int l = 0; l < 3; l++)
                        {
                            gotoTable[i][j][k][l] = s.readInt();
                        }
                    }
                }
            }

            // read accept
            length = s.readInt();
            accept = new int[length][];
            for(int i = 0; i < accept.length; i++)
            {
                length = s.readInt();
                accept[i] = new int[length];
                for(int j = 0; j < accept[i].length; j++)
                {
                    accept[i][j] = s.readInt();
                }
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"lexer.dat\" is either missing or corrupted.");
        }
    }
}
